generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model flashcard {
  id                String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  question          String         @db.VarChar(255)
  answer            String         @db.VarChar(255)
  flashcard_deck_id String         @db.Uuid
  created_at        DateTime       @default(now()) @db.Timestamp(6)
  updated_at        DateTime       @default(now()) @db.Timestamp(6)
  flashcard_deck    flashcard_deck @relation(fields: [flashcard_deck_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model flashcard_deck {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title           String       @db.VarChar(255)
  organization_id String       @db.Uuid
  user_id         String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  flashcard       flashcard[]
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description    String?          @db.VarChar(255)
  image          String?          @db.VarChar(255)
  name           String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  user_id        String           @db.Uuid
  tenant_id      String           @db.VarChar(255)
  flashcard_deck flashcard_deck[]
  user           user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email          String           @unique @db.VarChar(255)
  firstName      String?          @db.VarChar(255)
  lastName       String?          @db.VarChar(255)
  roq_user_id    String           @db.VarChar(255)
  tenant_id      String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  flashcard_deck flashcard_deck[]
  organization   organization[]
}
